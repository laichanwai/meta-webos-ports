../phonesim-1.20/src/qsmsmessage.cpp: In member function 'QCBSMessage QCBSDeliverMessage::unpack(QTextCodec*)':
../phonesim-1.20/src/qsmsmessage.cpp:2598:40: error: ambiguous overload for 'operator==' (operand types are 'QCharRef' and 'char')
                          text[len - 1] == '\0' ) ) {
                          ~~~~~~~~~~~~~~^~~~~~~
In file included from ../phonesim-1.20/src/qsmsmessage.h:23:0,
                 from ../phonesim-1.20/src/qsmsmessage.cpp:22:
/OE/build/owpb/webos-ports/tmp-glibc/work/i586-webos-linux/phonesim/1.20-r0/recipe-sysroot/usr/include/qt5/QtCore/qstring.h:1632:13: note: candidate: bool operator==(QChar, const QStringRef&)
 inline bool operator==(QChar lhs, const QStringRef &rhs) Q_DECL_NOTHROW
             ^~~~~~~~
/OE/build/owpb/webos-ports/tmp-glibc/work/i586-webos-linux/phonesim/1.20-r0/recipe-sysroot/usr/include/qt5/QtCore/qstring.h:1613:13: note: candidate: bool operator==(QChar, const QString&)
 inline bool operator==(QChar lhs, const QString &rhs) Q_DECL_NOTHROW
             ^~~~~~~~
In file included from /OE/build/owpb/webos-ports/tmp-glibc/work/i586-webos-linux/phonesim/1.20-r0/recipe-sysroot/usr/include/qt5/QtCore/qstring.h:48:0,
                 from ../phonesim-1.20/src/qsmsmessage.h:23,
                 from ../phonesim-1.20/src/qsmsmessage.cpp:22:
/OE/build/owpb/webos-ports/tmp-glibc/work/i586-webos-linux/phonesim/1.20-r0/recipe-sysroot/usr/include/qt5/QtCore/qchar.h:573:30: note: candidate: constexpr bool operator==(QChar, QChar)
 Q_DECL_CONSTEXPR inline bool operator==(QChar c1, QChar c2) Q_DECL_NOTHROW { return c1.ucs == c2.ucs; }
                              ^~~~~~~~
make: *** [Makefile:583: src/qsmsmessage.o] Error 1

--- phonesim-1.20/src/qsmsmessage.cpp	2012-08-07 06:24:33.000000000 +0200
+++ phonesim-1.20/src/qsmsmessage.cpp.new	2017-02-02 20:00:59.462225788 +0100
@@ -2594,8 +2594,8 @@
     QString text = userData
         ( (QSMSDataCodingScheme)scheme, codec, headers, false, true );
     len = text.length();
-    while ( len > 0 && ( text[len - 1] == '\r' || text[len - 1] == '\n' ||
-                         text[len - 1] == '\0' ) ) {
+    while ( len > 0 && ( text.at(len - 1) == QChar ('\r') || text.at(len - 1) == QChar ('\n') ||
+                         text.at(len - 1) == QChar ('\0') ) ) {
         --len;
     }
     m.setText( text.left( len ) );
