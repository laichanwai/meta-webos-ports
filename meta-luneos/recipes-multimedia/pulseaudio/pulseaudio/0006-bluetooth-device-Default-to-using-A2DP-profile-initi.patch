From b9cfc004742b7e121e0fd3086f2df9e064a58071 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Juho=20H=C3=A4m=C3=A4l=C3=A4inen?=
 <juho.hamalainen@tieto.com>
Date: Wed, 11 Dec 2013 18:27:07 +0200
Subject: [PATCH 6/9] bluetooth-device: Default to using A2DP profile
 initially.

By default have A2DP profiles with higher priority than HFP profiles,
since usually when A2DP+HFP-capable device is connected, it's meant for
A2DP streaming. This behavior can be dynamically overridden by setting
property bluetooth.prefer.hsp as true to SCO sink. When this property is
found in SCO sink upon bluetooth-device startup, HFP profiles have
higher priority than A2DP to select HFP initially.

Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
---
 src/modules/bluetooth/module-bluez4-device.c | 27 +++++++++++++++++++++++----
 1 file changed, 23 insertions(+), 4 deletions(-)

diff --git a/src/modules/bluetooth/module-bluez4-device.c b/src/modules/bluetooth/module-bluez4-device.c
index d6b5e43d..eb55f631 100644
--- a/src/modules/bluetooth/module-bluez4-device.c
+++ b/src/modules/bluetooth/module-bluez4-device.c
@@ -203,6 +203,8 @@ enum {
 
 #define USE_SCO_OVER_PCM(u) (u->profile == PA_BLUEZ4_PROFILE_HSP && (u->hsp.sco_sink && u->hsp.sco_source))
 
+#define BLUETOOTH_PREFER_HSP "bluetooth.prefer.hsp"
+
 static int init_profile(struct userdata *u);
 
 /* from IO thread */
@@ -2230,6 +2232,22 @@ static void create_card_ports(struct userdata *u, pa_hashmap *ports) {
     pa_device_port_new_data_done(&port_data);
 }
 
+static int check_prefer_hsp(struct userdata *u) {
+    const char *tmp;
+    int prefer_hsp = 0;
+
+    pa_assert(u);
+
+    if (u->hsp.sco_sink) {
+        if ((tmp = pa_proplist_gets(u->hsp.sco_sink->proplist, BLUETOOTH_PREFER_HSP))) {
+            if (pa_streq(tmp, "true"))
+                prefer_hsp = 20;
+        }
+    }
+
+    return prefer_hsp;
+}
+
 /* Run from main thread */
 static pa_card_profile *create_card_profile(struct userdata *u, const char *uuid, pa_hashmap *ports) {
     pa_device_port *input_port, *output_port;
@@ -2243,7 +2261,7 @@ static pa_card_profile *create_card_profile(struct userdata *u, const char *uuid
 
     if (pa_streq(uuid, A2DP_SINK_UUID)) {
         p = pa_card_profile_new("a2dp", _("High Fidelity Playback (A2DP)"), sizeof(pa_bluez4_profile_t));
-        p->priority = 10;
+        p->priority = 20;
         p->n_sinks = 1;
         p->n_sources = 0;
         p->max_sink_channels = 2;
@@ -2254,7 +2272,7 @@ static pa_card_profile *create_card_profile(struct userdata *u, const char *uuid
         *d = PA_BLUEZ4_PROFILE_A2DP;
     } else if (pa_streq(uuid, A2DP_SOURCE_UUID)) {
         p = pa_card_profile_new("a2dp_source", _("High Fidelity Capture (A2DP)"), sizeof(pa_bluez4_profile_t));
-        p->priority = 10;
+        p->priority = 20;
         p->n_sinks = 0;
         p->n_sources = 1;
         p->max_sink_channels = 0;
@@ -2265,7 +2283,7 @@ static pa_card_profile *create_card_profile(struct userdata *u, const char *uuid
         *d = PA_BLUEZ4_PROFILE_A2DP_SOURCE;
     } else if (pa_streq(uuid, HSP_HS_UUID) || pa_streq(uuid, HFP_HS_UUID)) {
         p = pa_card_profile_new("hsp", _("Telephony Duplex (HSP/HFP)"), sizeof(pa_bluez4_profile_t));
-        p->priority = 20;
+        p->priority = 10 + check_prefer_hsp(u);
         p->n_sinks = 1;
         p->n_sources = 1;
         p->max_sink_channels = 1;
@@ -2277,7 +2295,7 @@ static pa_card_profile *create_card_profile(struct userdata *u, const char *uuid
         *d = PA_BLUEZ4_PROFILE_HSP;
     } else if (pa_streq(uuid, HFP_AG_UUID)) {
         p = pa_card_profile_new("hfgw", _("Handsfree Gateway"), sizeof(pa_bluez4_profile_t));
-        p->priority = 20;
+        p->priority = 10 + check_prefer_hsp(u);
         p->n_sinks = 1;
         p->n_sources = 1;
         p->max_sink_channels = 1;
@@ -2387,6 +2405,7 @@ static int add_card(struct userdata *u) {
 
     d = PA_CARD_PROFILE_DATA(u->card->active_profile);
 
+    pa_log_debug("Select initial profile (%s)", *d == PA_BLUEZ4_PROFILE_OFF ? "off" : pa_bluez4_profile_to_string(*d));
     if (*d != PA_BLUEZ4_PROFILE_OFF && (!device->transports[*d] ||
                               device->transports[*d]->state == PA_BLUEZ4_TRANSPORT_STATE_DISCONNECTED)) {
         pa_log_warn("Default profile not connected, selecting off profile");
-- 
2.11.1

